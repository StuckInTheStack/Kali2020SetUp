#  Alias file for linux targets so I can have my aliases and function on target host.
#  I also included these for 

alias dir='dir --color=always'
alias grep='grep --color=always'
alias la='ls -altr --color=always'
alias la='ls -altr --color=always'

function mcd () { mkdir -p $1; cd $1;}
function me () { chmod +x $1;}

alias httpup='python -m SimpleHTTPServer '   # quick http server
alias better='$(which python) -c "import pty;pty.spawn(\"/bin/bash\")"'
echo "Now you should improve your shell with $ better  and then <ctrl> z , then# stty raw -echo & fg"

function rg() {
if [ -z $1 ]; then 
echo "Bash script to recursively search from the current directory for given search term in all files."
echo "Use with:  rg <term> [term, term, ...]";    
return 1  
fi
search=""
for string in "$@" 
do
  if [ -z $search ]; then 
    search=$string;    
  else
    search=$search" | "$string;
  fi
done
grep -R -n -i $search . 2>/dev/null;
}

function extract {
 if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
    return 1
 else
    for n in $@
    do
      if [ -f "$n" ] ; then
          case "${n%,}" in
            *.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar) 
                         tar xvf "$n"       ;;
            *.lzma)      unlzma ./"$n"      ;;
            *.bz2)       bunzip2 ./"$n"     ;;
            *.rar)       unrar x -ad ./"$n" ;;
            *.gz)        gunzip ./"$n"      ;;
            *.zip)       unzip ./"$n"       ;;
            *.z)         uncompress ./"$n"  ;;
            *.7z|*.arj|*.cab|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.rpm|*.udf|*.wim|*.xar)
                         7z x ./"$n"        ;;
            *.xz)        unxz ./"$n"        ;;
            *.exe)       cabextract ./"$n"  ;;
            *)
                         echo "extract: '$n' - unknown archive method"
                         return 1
                         ;;
          esac
      else
          echo "'$n' - file does not exist"
          return 1
      fi
    done
fi
}

